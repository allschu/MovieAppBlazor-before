@page "/moviedetails/{Id:int}"
@using MovieAppBlazor.Data

<PageTitle>Movie service</PageTitle>

@inject MovieService movieService
@inject CastService castService
@inject IJSRuntime JS

@if (@MovieDetail == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid">
        <h3>@MovieDetail.Title (@MovieDetail.Release_date.ToShortDateString())</h3>
        <p><i>@MovieDetail.Tagline</i></p>
        <div class="row">
            <div class="col-sm-4"><img style="width: 400px; height: auto" src="https://image.tmdb.org/t/p/w500/@MovieDetail.Poster_path" /></div>
            <div class="col-sm-8">
                <h4>Summary</h4>
                @MovieDetail.Overview
                <br />
                <br />
                <h4>Cast</h4>
                @foreach (var actor in Cast.OrderBy(x => x.order).Take(5))
                {
                    <div class="row cast">
                        <div class="col-sm-2">
                     
                            <img style="width: 100px; height: auto" src="https://image.tmdb.org/t/p/w500/@actor.profile_path" />
                        </div>
                        <div class="col-sm-10">
                            <a @onclick="@(() => OnActorClick(actor.id))">@actor.name</a> 
                            <br />
                            <i>@actor.character</i>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="castMemberDialog" title="person detail">
        @if (SelectedCastMember != null)
        {
             <div class="row">
                <h4>@SelectedCastMember.name</h4>
                <img style="width: 300px; height: auto" src="https://image.tmdb.org/t/p/w500/@SelectedCastMember.profile_path" />
                <p>@SelectedCastMember.biography</p>
             </div>
        }
        else
        {
            <p>loading...</p>
        }
    </div>
}




@code {

    [Parameter]
    public int Id { get; set; }

    private MovieDetail MovieDetail { get; set; }
    private ICollection<Cast> Cast { get; set; }
    private Person SelectedCastMember{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        MovieDetail = await movieService.GetMovieDetailAsync(Id);
        Cast = await castService.GetCastAsync(Id);
    }

    private async Task OnActorClick(int actorId)
    {
        SelectedCastMember = await castService.GetPersonAsync(actorId);

        await JS.InvokeVoidAsync("ShowCastDetail");
    }
}
